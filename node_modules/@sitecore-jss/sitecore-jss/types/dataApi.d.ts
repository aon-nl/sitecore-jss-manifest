import { LayoutServiceData, PlaceholderData } from './dataModels';
import { HttpJsonFetcher } from './httpClientInterface';
export interface LayoutServiceConfig {
    /**
     * Host name of the Sitecore instance serving Layout Service requests.
     */
    host?: string;
    /**
     * Layout Service "named" configuration
     */
    configurationName?: string;
    /**
     * This value overrides the default layout service URL.
     * Note: `host` and `configurationName` options are ignored if `layoutServiceUrl` is set.
     */
    serviceUrl?: string;
}
export interface BaseRequestOptions<T> {
    /**
     * An object of key:value pairs to be stringified and used as querystring parameters.
     */
    querystringParams?: {
        [key: string]: any;
    };
    /** The fetcher that performs the HTTP request and returns a promise to JSON */
    fetcher: HttpJsonFetcher<T>;
}
export interface LayoutServiceRequestOptions<T> extends BaseRequestOptions<T> {
    /**
     * Configuration options for Layout Service requests.
     */
    layoutServiceConfig?: LayoutServiceConfig;
}
/**
 * Makes a request to Sitecore Layout Service for the specified route item path.
 */
export declare function fetchRouteData(itemPath: string, options: LayoutServiceRequestOptions<LayoutServiceData>): Promise<LayoutServiceData>;
/**
 * Makes a request to Sitecore Layout Service for the specified placeholder in
 * a specific route item. Allows you to retrieve rendered data for individual placeholders instead of entire routes.
 */
export declare function fetchPlaceholderData(placeholderName: string, itemPath: string, options: LayoutServiceRequestOptions<PlaceholderData>): Promise<PlaceholderData>;
